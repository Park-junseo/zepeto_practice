fileFormatVersion: 2
guid: 8fd83a34394bdc24dbaa4b09ce059136
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    ZEPETO_Multiplay_1 = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst ZEPETO_Character_Controller_1
    = require(\\\"ZEPETO.Character.Controller\\\");\\r\\nconst UnityEngine = require(\\\"UnityEngine\\\");\\r\\nclass
    ClientStarterV2 extends ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n    constructor()
    {\\r\\n        super(...arguments);\\r\\n        this.currentPlayers = new Map();\\r\\n       
    this.curPlayersPrevplayerState = new Map();\\r\\n        this.curPlayersJumpCounter
    = new Map();\\r\\n        this.characterStateMap = new Map([\\r\\n           
    [0, \\\"Invalid\\\"],\\r\\n            [1, \\\"Idle\\\"],\\r\\n            [2,
    \\\"Walk\\\"],\\r\\n            [3, \\\"Run\\\"],\\r\\n            [4, \\\"JumpIdle\\\"],\\r\\n           
    [5, \\\"JumpMove\\\"],\\r\\n            [20, \\\"Teleport\\\"],\\r\\n           
    [30, \\\"Gesture\\\"],\\r\\n            [102, \\\"Move\\\"],\\r\\n           
    [103, \\\"MoveTurn\\\"],\\r\\n            [104, \\\"Jump\\\"],\\r\\n           
    [106, \\\"Stamp\\\"],\\r\\n            [108, \\\"Falling\\\"],\\r\\n           
    [109, \\\"Landing\\\"],\\r\\n        ]);\\r\\n        this.unableJumpStates =
    [\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Jump,\\r\\n           
    ZEPETO_Character_Controller_1.CharacterState.Falling,\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Landing,\\r\\n           
    ZEPETO_Character_Controller_1.CharacterState.Teleport,\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Invalid,\\r\\n       
    ];\\r\\n    }\\r\\n    Start() {\\r\\n        this.multiplay.add_RoomCreated((room)
    => {\\r\\n            this.room = room;\\r\\n        });\\r\\n        this.multiplay.add_RoomJoined((room)
    => {\\r\\n            room.add_OnStateChange(this.OnStateChange.bind(this));\\r\\n       
    });\\r\\n        this.StartCoroutine(this.SendMessageLoop(0.04));\\r\\n       
    this.StartCoroutine(this.CheckValidControl(1.0));\\r\\n    }\\r\\n    // Send
    the local character transform to the server at the scheduled Interval Time.\\r\\n   
    *SendMessageLoop(tick) {\\r\\n        const secondsTick = new UnityEngine.WaitForSeconds(tick);\\r\\n       
    let character;\\r\\n        while (true) {\\r\\n            yield null;\\r\\n           
    if (this.room != null && this.room.IsConnected) {\\r\\n                const
    hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n               
    if (hasPlayer) {\\r\\n                    character = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId).character;\\r\\n                   
    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n       
    const playerState = this.curPlayersPrevplayerState.get(this.room.SessionId);\\r\\n       
    while (true) {\\r\\n            if (this.room != null && this.room.IsConnected
    && character.isActiveAndEnabled) {\\r\\n                if (character.CurrentState
    !== ZEPETO_Character_Controller_1.CharacterState.Idle || playerState.state !==
    ZEPETO_Character_Controller_1.CharacterState.Idle) {\\r\\n                   
    this.SendTransform(character.transform, character.CurrentState);\\r\\n                   
    this.SendState(character.CurrentState);\\r\\n                }\\r\\n               
    this.JumpThisPlayer();\\r\\n                this.CheckValidGoundLayer(character);\\r\\n               
    this.debugText.text = this.characterStateMap.get(character.CurrentState);\\r\\n           
    }\\r\\n            yield secondsTick;\\r\\n        }\\r\\n    }\\r\\n    *CheckValidControl(tick)
    {\\r\\n        const ticks = new UnityEngine.WaitForSeconds(tick);\\r\\n       
    while (!(this.zepetoPlayer?.isLoadedCharacter && this.zepetoPlayer.character.isActiveAndEnabled))
    {\\r\\n            yield null;\\r\\n        }\\r\\n        while (true) {\\r\\n           
    this.CheckValidGoundLayer(this.zepetoPlayer.character);\\r\\n            yield
    ticks;\\r\\n        }\\r\\n    }\\r\\n    OnStateChange(state, isFirst) {\\r\\n       
    // When the first OnStateChange event is received, a full state snapshot is recorded.\\r\\n       
    if (isFirst) {\\r\\n            // [CharacterController] (Local) Called when
    the Player instance is fully loaded in Scene\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\\r\\n                this.zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\\r\\n               
    // \uC810\uD504 \uCE74\uC6B4\uD2B8 \uD578\uB4E4\uB7EC\\r\\n                this.zepetoPlayer.character.OnUpdateState.AddListener((cur)
    => {\\r\\n                    //if(this.zepetoPlayer.character.tryJump) console.log(`[OnStateChage]
    ${this.characterStateMap.get(cur)}/${this.characterStateMap.get(this.zepetoPlayer.character.CurrentState)}`);\\r\\n                   
    if (this.zepetoPlayer.character.tryJump)\\r\\n                        this.SendPlayerJump(cur);\\r\\n               
    });\\r\\n                // // \uB79C\uB529 \uD578\uB4E4\uB7EC\\r\\n               
    // this.zepetoPlayer.character.OnChangedState.AddListener((cur, prev)=>this.SendPlayerLanding(this.zepetoPlayer.character.transform,
    cur, prev));\\r\\n                //ZepetoPlayers.instance.ZepetoCamera.\\r\\n           
    });\\r\\n            // [CharacterController] (Local) Called when the Player
    instance is fully loaded in Scene\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedPlayer.AddListener((sessionId)
    => {\\r\\n                const isLocal = this.room.SessionId === sessionId;\\r\\n               
    if (!isLocal) {\\r\\n                    const player = this.currentPlayers.get(sessionId);\\r\\n                   
    const trigger = this.room.State.jumpTriggers.get_Item(sessionId);\\r\\n                   
    const landingPoint = this.room.State.landingPoints.get_Item(sessionId);\\r\\n                   
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n                   
    const prevPlayerState = this.curPlayersPrevplayerState.get(sessionId);\\r\\n                   
    const jumpCounter = this.curPlayersJumpCounter.get(sessionId);\\r\\n                   
    let temp = '';\\r\\n                    // [RoomState] Called whenever the state
    of the player instance is updated. \\r\\n                    player.add_OnChange((changeValues)
    => {\\r\\n                        this.OnUpdatePlayer(zepetoPlayer, prevPlayerState,
    player, jumpCounter, temp);\\r\\n                        //console.log(temp);\\r\\n                   
    });\\r\\n                    trigger.add_OnChange((changeVlaues) => this.HandleJumpCounter(jumpCounter));\\r\\n                   
    // trigger.OnChange += (changeVlaues) => this.StartCoroutine(this.OnHandlePlayerJump(zepetoPlayer.character,
    jumpCounter));\\r\\n                    // zepetoPlayer.character.OnChangedState.AddListener((cur,prev)=>this.FixPlayerLandingPoint(\\r\\n                   
    //     zepetoPlayer.character,\\r\\n                    //     //prevPlayerState,\\r\\n                   
    //     landingPoint,\\r\\n                    //     cur,\\r\\n                   
    //     prev\\r\\n                    // ));\\r\\n                    // zepetoPlayer.character.OnChangedState.AddListener((cur,prev)=>{\\r\\n                   
    //     this.OnJumpPlayer(zepetoPlayer.character, jumpCounter, cur, prev)\\r\\n                   
    // });\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n       
    let join = new Map();\\r\\n        let leave = new Map(this.currentPlayers);\\r\\n       
    state.players.ForEach((sessionId, player) => {\\r\\n            if (!this.currentPlayers.has(sessionId))
    {\\r\\n                join.set(sessionId, player);\\r\\n            }\\r\\n           
    leave.delete(sessionId);\\r\\n        });\\r\\n        // [RoomState] Create
    a player instance for players that enter the Room\\r\\n        join.forEach((player,
    sessionId) => this.OnJoinPlayer(sessionId, player));\\r\\n        // [RoomState]
    Remove the player instance for players that exit the room\\r\\n        leave.forEach((player,
    sessionId) => this.OnLeavePlayer(sessionId, player));\\r\\n    }\\r\\n    OnJoinPlayer(sessionId,
    player) {\\r\\n        console.log(`[OnJoinPlayer] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.set(sessionId, player);\\r\\n        const spawnInfo = new
    ZEPETO_Character_Controller_1.SpawnInfo();\\r\\n        const position = this.ParseVector3(player.transform.position);\\r\\n       
    const rotation = this.ParseVector3(player.transform.rotation);\\r\\n        spawnInfo.position
    = position;\\r\\n        spawnInfo.rotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n       
    this.curPlayersPrevplayerState.set(sessionId, {\\r\\n            state: player.state,\\r\\n           
    position: position,\\r\\n            rotation: UnityEngine.Quaternion.Euler(rotation)\\r\\n       
    });\\r\\n        this.curPlayersJumpCounter.set(sessionId, { value: 0 });\\r\\n       
    const isLocal = this.room.SessionId === player.sessionId;\\r\\n        $extension(\\\"ZEPETO.Character.Controller.ZepetoPlayersExtension\\\").CreatePlayerWithUserId(ZEPETO_Character_Controller_1.ZepetoPlayers.instance,
    sessionId, player.zepetoUserId, spawnInfo, isLocal);\\r\\n    }\\r\\n    OnLeavePlayer(sessionId,
    player) {\\r\\n        console.log(`[OnRemove] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.get(sessionId).OnChange = null;\\r\\n        this.currentPlayers.get(sessionId).OnChange
    = null;\\r\\n        this.currentPlayers.delete(sessionId);\\r\\n        this.curPlayersPrevplayerState.delete(sessionId);\\r\\n       
    this.curPlayersJumpCounter.delete(sessionId);\\r\\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.RemovePlayer(sessionId);\\r\\n   
    }\\r\\n    OnUpdatePlayer(zepetoPlayer, prevPlayerState, player, jumpCounter,
    $temp) {\\r\\n        const position = this.ParseVector3(player.transform.position);\\r\\n       
    const rotation = this.ParseVector3(player.transform.rotation);\\r\\n        $temp
    = this.characterStateMap.get(player.state);\\r\\n        // // \uB3D9\uAE30\uD654
    \uBCF4\uC815\\r\\n        // // if(prevPlayerState.state === CharacterState.Idle
    && player.state === CharacterState.Idle)\\r\\n        // if(prevPlayerState.state
    === CharacterState.Idle && player.state === CharacterState.Idle)\\r\\n       
    // {\\r\\n        //     if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n        //         prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n       
    //         return;\\r\\n        //     zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n        //     zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n        // }\\r\\n        // \uB3D9\uAE30\uD654
    \uBCF4\uC815\\r\\n        // if(prevPlayerState.state === CharacterState.Idle
    && player.state === CharacterState.Idle)\\r\\n        if ((player.state === ZEPETO_Character_Controller_1.CharacterState.Idle
    ||\\r\\n            player.state === ZEPETO_Character_Controller_1.CharacterState.Stamp
    ||\\r\\n            player.state === ZEPETO_Character_Controller_1.CharacterState.Landing)
    &&\\r\\n            player.state === prevPlayerState.state) {\\r\\n           
    if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n                prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n               
    return;\\r\\n            zepetoPlayer.character.transform.position = prevPlayerState.position;\\r\\n           
    zepetoPlayer.character.transform.rotation = prevPlayerState.rotation;\\r\\n       
    }\\r\\n        // if((zepetoPlayer.character.CurrentState === CharacterState.Stamp
    || zepetoPlayer.character.CurrentState === CharacterState.Landing) && \\r\\n       
    //     (prevPlayerState.landingPosition && prevPlayerState.landingRotation))\\r\\n       
    // {\\r\\n        //     // if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n        //     //     prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n       
    //     //     return;\\r\\n        //     // zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n        //     // zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n        //     zepetoPlayer.character.transform.position
    = prevPlayerState.landingPosition;\\r\\n        //     zepetoPlayer.character.transform.rotation
    = prevPlayerState.landingRotation;\\r\\n        //     prevPlayerState.landingPosition
    = null;\\r\\n        //     prevPlayerState.landingRotation = null;\\r\\n       
    // } \\r\\n        var moveDir = UnityEngine.Vector3.op_Subtraction(position,
    zepetoPlayer.character.transform.position);\\r\\n        moveDir = new UnityEngine.Vector3(moveDir.x,
    0, moveDir.z);\\r\\n        if (moveDir.magnitude < 0.05) {\\r\\n           
    if (player.state === ZEPETO_Character_Controller_1.CharacterState.MoveTurn)\\r\\n               
    return;\\r\\n            zepetoPlayer.character.StopMoving();\\r\\n        }\\r\\n       
    else {\\r\\n            zepetoPlayer.character.MoveContinuously(moveDir);\\r\\n       
    }\\r\\n        if (prevPlayerState) {\\r\\n            if (prevPlayerState.state
    === ZEPETO_Character_Controller_1.CharacterState.Jump || prevPlayerState.state
    === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n               
    player.state !== ZEPETO_Character_Controller_1.CharacterState.Jump && player.state
    !== ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n               
    prevPlayerState.landingPosition = position;\\r\\n                prevPlayerState.landingRotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n            }\\r\\n           
    prevPlayerState.state = player.state; //player.expectedState as CharacterState;\\r\\n           
    prevPlayerState.position = position;\\r\\n            prevPlayerState.rotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n            // if((player.state
    === CharacterState.Stamp || player.state === CharacterState.Landing) && \\r\\n           
    //     player.state !== prevPlayerState.state)\\r\\n            // {\\r\\n           
    //     // if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n            //     //     prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n           
    //     //     return;\\r\\n            //     // zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n            //     // zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n            //     prevPlayerState.landingPosition
    = position;\\r\\n            //     prevPlayerState.landingRotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n           
    // } \\r\\n        }\\r\\n    }\\r\\n    HandleJumpCounter(jumpCounter) {\\r\\n       
    jumpCounter.value += 1;\\r\\n    }\\r\\n    ;\\r\\n    *OnHandlePlayerJump(character,
    jumpCounter) {\\r\\n        jumpCounter.value += 1;\\r\\n        while (true)
    {\\r\\n            if (jumpCounter.value > 0 && character && !this.unableJumpStates.includes(character.CurrentState))
    {\\r\\n                character.Jump();\\r\\n                jumpCounter.value
    -= 1;\\r\\n                break;\\r\\n            }\\r\\n            yield null;\\r\\n       
    }\\r\\n    }\\r\\n    ;\\r\\n    JumpThisPlayer() {\\r\\n        this.curPlayersJumpCounter.forEach((jumpCounter,
    sessionId) => {\\r\\n            // \uC810\uD504\uD558\uAE30\\r\\n           
    if (jumpCounter.value > 0) {\\r\\n                const character = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId).character;\\r\\n               
    if (character && !this.unableJumpStates.includes(character.CurrentState)) {\\r\\n                   
    character.Jump();\\r\\n                    jumpCounter.value -= 1;\\r\\n               
    }\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    OnJumpPlayer(character,
    jumpCounter, curState, prevState) {\\r\\n        if (jumpCounter.value > 0) {\\r\\n           
    if (character && !this.unableJumpStates.includes(curState)) {\\r\\n               
    character.Jump();\\r\\n                jumpCounter.value -= 1;\\r\\n           
    }\\r\\n        }\\r\\n    }\\r\\n    FixPlayerLandingPointWithState(character,
    playerState, curState, prevState) {\\r\\n        if (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump
    || prevState === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n            (playerState.landingPosition
    !== null && playerState.landingRotation !== null)) {\\r\\n            character.transform.position
    = playerState.landingPosition;\\r\\n            character.transform.rotation
    = playerState.landingRotation;\\r\\n            playerState.landingPosition =
    null;\\r\\n            playerState.landingRotation = null;\\r\\n        }\\r\\n   
    }\\r\\n    FixPlayerLandingPoint(character, landingPoint, curState, prevState)
    {\\r\\n        if (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump
    || prevState === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n            const
    position = this.ParseVector3(landingPoint.transform.position);\\r\\n           
    const rotation = UnityEngine.Quaternion.Euler(this.ParseVector3(landingPoint.transform.rotation));\\r\\n           
    character.transform.position = position;\\r\\n            character.transform.rotation
    = rotation;\\r\\n        }\\r\\n    }\\r\\n    IsEqualVector3State(first, second)
    {\\r\\n        return (first.x === second.x &&\\r\\n            first.y === second.y
    &&\\r\\n            first.z === second.z);\\r\\n    }\\r\\n    CheckValidGoundLayer(character)
    {\\r\\n        let ref = $ref();\\r\\n        if (UnityEngine.Physics.Raycast(character.transform.position,
    UnityEngine.Vector3.down, ref, 1000)) {\\r\\n            let hitInfo = $unref(ref);\\r\\n       
    }\\r\\n        else {\\r\\n            character.Teleport(UnityEngine.Vector3.zero,
    UnityEngine.Quaternion.Euler(UnityEngine.Vector3.zero));\\r\\n        }\\r\\n   
    }\\r\\n    SendTransform(transform, state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    const pos = new ZEPETO_Multiplay_1.RoomData();\\r\\n        pos.Add(\\\"x\\\",
    transform.localPosition.x);\\r\\n        pos.Add(\\\"y\\\", transform.localPosition.y);\\r\\n       
    pos.Add(\\\"z\\\", transform.localPosition.z);\\r\\n        data.Add(\\\"position\\\",
    pos.GetObject());\\r\\n        const rot = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    rot.Add(\\\"x\\\", transform.localEulerAngles.x);\\r\\n        rot.Add(\\\"y\\\",
    transform.localEulerAngles.y);\\r\\n        rot.Add(\\\"z\\\", transform.localEulerAngles.z);\\r\\n       
    data.Add(\\\"rotation\\\", rot.GetObject());\\r\\n        data.Add(\\\"expectedState\\\",
    state);\\r\\n        this.room.Send(\\\"onChangedTransform\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendState(state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"state\\\", state);\\r\\n        if (state === ZEPETO_Character_Controller_1.CharacterState.Jump)
    {\\r\\n            data.Add(\\\"subState\\\", this.zepetoPlayer.character.MotionV2.CurrentJumpState);\\r\\n       
    }\\r\\n        this.room.Send(\\\"onChangedState\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendPlayerLanding(transform, curState, prevState) {\\r\\n        if
    (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump || prevState
    === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n            const
    data = new ZEPETO_Multiplay_1.RoomData();\\r\\n            const pos = new ZEPETO_Multiplay_1.RoomData();\\r\\n           
    pos.Add(\\\"x\\\", transform.localPosition.x);\\r\\n            pos.Add(\\\"y\\\",
    transform.localPosition.y);\\r\\n            pos.Add(\\\"z\\\", transform.localPosition.z);\\r\\n           
    data.Add(\\\"position\\\", pos.GetObject());\\r\\n            const rot = new
    ZEPETO_Multiplay_1.RoomData();\\r\\n            rot.Add(\\\"x\\\", transform.localEulerAngles.x);\\r\\n           
    rot.Add(\\\"y\\\", transform.localEulerAngles.y);\\r\\n            rot.Add(\\\"z\\\",
    transform.localEulerAngles.z);\\r\\n            data.Add(\\\"rotation\\\", rot.GetObject());\\r\\n           
    this.room.Send(\\\"onPlayerLanding\\\", data.GetObject());\\r\\n            console.log(`[SendLandingPOint]
    ${transform.localPosition.ToString()}`);\\r\\n        }\\r\\n    }\\r\\n    ParseVector3(vector3)
    {\\r\\n        return new UnityEngine.Vector3(vector3.x, vector3.y, vector3.z);\\r\\n   
    }\\r\\n    /*-------------------public---------------------*/\\r\\n    SendPlayerJump(state)
    {\\r\\n        if (!this.unableJumpStates.includes(state)) {\\r\\n           
    this.room.Send(\\\"onPlayerJump\\\");\\r\\n            console.log(\\\"[SendPlayerJump]
    jump!\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.default = ClientStarterV2;\\r\\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpZW50U3RhcnRlclYyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ2xpZW50U3RhcnRlclYyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQW1EO0FBRW5ELHVEQUFrRTtBQUVsRSw2RUFBNEo7QUFDNUosMkNBQTJDO0FBaUIzQyxNQUFxQixlQUFnQixTQUFRLHFDQUFxQjtJQUFsRTs7UUFPWSxtQkFBYyxHQUF3QixJQUFJLEdBQUcsRUFBa0IsQ0FBQztRQUNoRSw4QkFBeUIsR0FBNkIsSUFBSSxHQUFHLEVBQXdCLENBQUM7UUFDdEYsMEJBQXFCLEdBQXdCLElBQUksR0FBRyxFQUFtQixDQUFDO1FBT3hFLHNCQUFpQixHQUFHLElBQUksR0FBRyxDQUF3QjtZQUN2RCxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUM7WUFDYixDQUFDLENBQUMsRUFBQyxNQUFNLENBQUM7WUFDVixDQUFDLENBQUMsRUFBQyxNQUFNLENBQUM7WUFDVixDQUFDLENBQUMsRUFBQyxLQUFLLENBQUM7WUFDVCxDQUFDLENBQUMsRUFBQyxVQUFVLENBQUM7WUFDZCxDQUFDLENBQUMsRUFBQyxVQUFVLENBQUM7WUFDZCxDQUFDLEVBQUUsRUFBQyxVQUFVLENBQUM7WUFDZixDQUFDLEVBQUUsRUFBQyxTQUFTLENBQUM7WUFDZCxDQUFDLEdBQUcsRUFBQyxNQUFNLENBQUM7WUFDWixDQUFDLEdBQUcsRUFBQyxVQUFVLENBQUM7WUFDaEIsQ0FBQyxHQUFHLEVBQUMsTUFBTSxDQUFDO1lBQ1osQ0FBQyxHQUFHLEVBQUMsT0FBTyxDQUFDO1lBQ2IsQ0FBQyxHQUFHLEVBQUMsU0FBUyxDQUFDO1lBQ2YsQ0FBQyxHQUFHLEVBQUMsU0FBUyxDQUFDO1NBQ2xCLENBQUMsQ0FBQztRQUVLLHFCQUFnQixHQUFHO1lBQ3ZCLDRDQUFjLENBQUMsSUFBSTtZQUNuQiw0Q0FBYyxDQUFDLE9BQU87WUFDdEIsNENBQWMsQ0FBQyxPQUFPO1lBQ3RCLDRDQUFjLENBQUMsUUFBUTtZ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\",\"assetPath\":\"Assets/Multiplay
    Script/ClientStarterV2.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"ZEPETO.World\",\"name\":\"multiplay\",\"type\":\"ZEPETO.World.ZepetoWorldMultiplay\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]},{\"assembly\":\"UnityEngine.UI\",\"name\":\"debugText\",\"type\":\"UnityEngine.UI.Text\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]}],\"name\":\"ClientStarterV2\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: 7d77bc537a383e329759d7de0b00a159
  onlyWriteTrigger: 0
