fileFormatVersion: 2
guid: 8fd83a34394bdc24dbaa4b09ce059136
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    ZEPETO_Multiplay_1 = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst ZEPETO_Character_Controller_1
    = require(\\\"ZEPETO.Character.Controller\\\");\\r\\nconst UnityEngine = require(\\\"UnityEngine\\\");\\r\\nconst
    UnityEngine_UI_1 = require(\\\"UnityEngine.UI\\\");\\r\\nconst ClientIKManager_1
    = require(\\\"./ClientIKManager\\\");\\r\\nconst ScreenShotModeManager_1 = require(\\\"../ScreenShotScripts/ScreenShotModeManager\\\");\\r\\nclass
    ClientStarterV2 extends ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n    constructor()
    {\\r\\n        super(...arguments);\\r\\n        this.currentPlayers = new Map();\\r\\n       
    this.curPlayersPrevplayerState = new Map();\\r\\n        this.curPlayersJumpCounter
    = new Map();\\r\\n        this.characterStateMap = new Map([\\r\\n           
    [0, \\\"Invalid\\\"],\\r\\n            [1, \\\"Idle\\\"],\\r\\n            [2,
    \\\"Walk\\\"],\\r\\n            [3, \\\"Run\\\"],\\r\\n            [4, \\\"JumpIdle\\\"],\\r\\n           
    [5, \\\"JumpMove\\\"],\\r\\n            [20, \\\"Teleport\\\"],\\r\\n           
    [30, \\\"Gesture\\\"],\\r\\n            [102, \\\"Move\\\"],\\r\\n           
    [103, \\\"MoveTurn\\\"],\\r\\n            [104, \\\"Jump\\\"],\\r\\n           
    [106, \\\"Stamp\\\"],\\r\\n            [108, \\\"Falling\\\"],\\r\\n           
    [109, \\\"Landing\\\"],\\r\\n        ]);\\r\\n        this.characterMoveStateMap
    = new Map([\\r\\n            [-1, \\\"None\\\"],\\r\\n            [0, \\\"MoveWalk\\\"],\\r\\n           
    [1, \\\"MoveRun\\\"],\\r\\n        ]);\\r\\n        this.characterJumpStateMap
    = new Map([\\r\\n            [-1, \\\"None\\\"],\\r\\n            [0, \\\"JumpIdle\\\"],\\r\\n           
    [1, \\\"JumpMove\\\"],\\r\\n            [2, \\\"JumpDash\\\"],\\r\\n           
    [3, \\\"JumpDouble\\\"],\\r\\n        ]);\\r\\n        this.unableJumpStates
    = [\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Jump,\\r\\n           
    ZEPETO_Character_Controller_1.CharacterState.Falling,\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Landing,\\r\\n           
    ZEPETO_Character_Controller_1.CharacterState.Teleport,\\r\\n            ZEPETO_Character_Controller_1.CharacterState.Invalid,\\r\\n       
    ];\\r\\n    }\\r\\n    Awake() {\\r\\n        ClientStarterV2.Instance = this;\\r\\n       
    this.clientIKManager = this.clientIKManager || this.gameObject.AddComponent($typeof(ClientIKManager_1.default));\\r\\n   
    }\\r\\n    Start() {\\r\\n        this.multiplay.add_RoomCreated((room) => {\\r\\n           
    this.room = room;\\r\\n        });\\r\\n        this.multiplay.add_RoomJoined((room)
    => {\\r\\n            room.add_OnStateChange(this.OnStateChange.bind(this));\\r\\n       
    });\\r\\n        this.StartCoroutine(this.SendMessageLoop(0.04));\\r\\n       
    this.StartCoroutine(this.CheckValidControl(1.0));\\r\\n        //this.StartCoroutine(this.FixRotation());\\r\\n       
    // ZepetoPlayers.instance.controllerData.controlMode = 1;\\r\\n    }\\r\\n   
    // Send the local character transform to the server at the scheduled Interval
    Time.\\r\\n    *SendMessageLoop(tick) {\\r\\n        const secondsTick = new
    UnityEngine.WaitForSeconds(tick);\\r\\n        let character;\\r\\n        while
    (true) {\\r\\n            yield null;\\r\\n            if (this.room != null
    && this.room.IsConnected) {\\r\\n                const hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n               
    if (hasPlayer) {\\r\\n                    character = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId).character;\\r\\n                   
    console.log(ZEPETO_Character_Controller_1.ZepetoPlayers.instance.motionV2Data.jumpDashSpeedThreshold);\\r\\n                   
    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n       
    const playerState = this.curPlayersPrevplayerState.get(this.room.SessionId);\\r\\n       
    let sendisActiveSelfie = false;\\r\\n        while (true) {\\r\\n           
    yield new UnityEngine.WaitForEndOfFrame();\\r\\n            if (this.room !=
    null && this.room.IsConnected && character.isActiveAndEnabled) {\\r\\n               
    if (character.CurrentState !== ZEPETO_Character_Controller_1.CharacterState.Idle
    || playerState.state !== ZEPETO_Character_Controller_1.CharacterState.Idle) {\\r\\n                   
    this.SendTransform(character.transform, character.CurrentState);\\r\\n                   
    this.SendState(character.CurrentState);\\r\\n                }\\r\\n               
    if (ScreenShotModeManager_1.default.GetInstance().isActiveSelfie) {\\r\\n                   
    this.SendSelfieIK(...(ScreenShotModeManager_1.default.GetInstance().GetIKController().GetLookAtAndTargetAt()));\\r\\n               
    }\\r\\n                this.JumpThisPlayer();\\r\\n                this.CheckValidGoundLayer(character);\\r\\n               
    this.debugText.text = `${this.characterStateMap.get(character.CurrentState)}/${this.characterMoveStateMap.get(character.MotionV2.CurrentMoveState)}/${this.characterJumpStateMap.get(character.MotionV2.CurrentJumpState)}`;\\r\\n           
    }\\r\\n            yield secondsTick;\\r\\n        }\\r\\n    }\\r\\n    *CheckValidControl(tick)
    {\\r\\n        const ticks = new UnityEngine.WaitForSeconds(tick);\\r\\n       
    while (!(this.zepetoPlayer?.isLoadedCharacter && this.zepetoPlayer.character.isActiveAndEnabled))
    {\\r\\n            yield null;\\r\\n        }\\r\\n        while (true) {\\r\\n           
    this.CheckValidGoundLayer(this.zepetoPlayer.character);\\r\\n            yield
    ticks;\\r\\n        }\\r\\n    }\\r\\n    OnStateChange(state, isFirst) {\\r\\n       
    // When the first OnStateChange event is received, a full state snapshot is recorded.\\r\\n       
    if (isFirst) {\\r\\n            // [CharacterController] (Local) Called when
    the Player instance is fully loaded in Scene\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\\r\\n                this.zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\\r\\n               
    // \uC810\uD504 \uCE74\uC6B4\uD2B8 \uD578\uB4E4\uB7EC\\r\\n                this.zepetoPlayer.character.OnUpdateState.AddListener((cur)
    => {\\r\\n                    //if(this.zepetoPlayer.character.tryJump) console.log(`[OnStateChage]
    ${this.characterStateMap.get(cur)}/${this.characterStateMap.get(this.zepetoPlayer.character.CurrentState)}`);\\r\\n                   
    if (this.zepetoPlayer.character.tryJump)\\r\\n                        this.SendPlayerJump(cur);\\r\\n               
    });\\r\\n                // // \uB79C\uB529 \uD578\uB4E4\uB7EC\\r\\n               
    // this.zepetoPlayer.character.OnChangedState.AddListener((cur, prev)=>this.SendPlayerLanding(this.zepetoPlayer.character.transform,
    cur, prev));\\r\\n                //ZepetoPlayers.instance.ZepetoCamera.\\r\\n           
    });\\r\\n            // [CharacterController] (Local) Called when the Player
    instance is fully loaded in Scene\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedPlayer.AddListener((sessionId)
    => {\\r\\n                const isLocal = this.room.SessionId === sessionId;\\r\\n               
    if (!isLocal) {\\r\\n                    const player = this.currentPlayers.get(sessionId);\\r\\n                   
    const jumpTrigger = this.room.State.jumpTriggers.get_Item(sessionId);\\r\\n                   
    const landingPoint = this.room.State.landingPoints.get_Item(sessionId);\\r\\n                   
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n                   
    const prevPlayerState = this.curPlayersPrevplayerState.get(sessionId);\\r\\n                   
    const jumpCounter = this.curPlayersJumpCounter.get(sessionId);\\r\\n                   
    let temp = '';\\r\\n                    // [RoomState] Called whenever the state
    of the player instance is updated. \\r\\n                    player.add_OnChange((changeValues)
    => {\\r\\n                        this.OnUpdatePlayer(zepetoPlayer, prevPlayerState,
    player, jumpCounter, temp);\\r\\n                        //console.log(temp);\\r\\n                   
    });\\r\\n                    jumpTrigger.add_OnChange((changeVlaues) => this.HandleJumpCounter(jumpCounter));\\r\\n                   
    // trigger.OnChange += (changeVlaues) => this.StartCoroutine(this.OnHandlePlayerJump(zepetoPlayer.character,
    jumpCounter));\\r\\n                    // zepetoPlayer.character.OnChangedState.AddListener((cur,prev)=>this.FixPlayerLandingPoint(\\r\\n                   
    //     zepetoPlayer.character,\\r\\n                    //     //prevPlayerState,\\r\\n                   
    //     landingPoint,\\r\\n                    //     cur,\\r\\n                   
    //     prev\\r\\n                    // ));\\r\\n                    // zepetoPlayer.character.OnChangedState.AddListener((cur,prev)=>{\\r\\n                   
    //     this.OnJumpPlayer(zepetoPlayer.character, jumpCounter, cur, prev)\\r\\n                   
    // });\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n       
    let join = new Map();\\r\\n        let leave = new Map(this.currentPlayers);\\r\\n       
    state.players.ForEach((sessionId, player) => {\\r\\n            if (!this.currentPlayers.has(sessionId))
    {\\r\\n                join.set(sessionId, player);\\r\\n            }\\r\\n           
    leave.delete(sessionId);\\r\\n        });\\r\\n        // [RoomState] Create
    a player instance for players that enter the Room\\r\\n        join.forEach((player,
    sessionId) => this.OnJoinPlayer(sessionId, player));\\r\\n        // [RoomState]
    Remove the player instance for players that exit the room\\r\\n        leave.forEach((player,
    sessionId) => this.OnLeavePlayer(sessionId, player));\\r\\n    }\\r\\n    OnJoinPlayer(sessionId,
    player) {\\r\\n        console.log(`[OnJoinPlayer] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.set(sessionId, player);\\r\\n        const spawnInfo = new
    ZEPETO_Character_Controller_1.SpawnInfo();\\r\\n        const position = this.ParseVector3(player.transform.position);\\r\\n       
    const rotation = this.ParseVector3(player.transform.rotation);\\r\\n        spawnInfo.position
    = position;\\r\\n        spawnInfo.rotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n       
    this.curPlayersPrevplayerState.set(sessionId, {\\r\\n            state: player.state,\\r\\n           
    position: position,\\r\\n            rotation: UnityEngine.Quaternion.Euler(rotation)\\r\\n       
    });\\r\\n        this.curPlayersJumpCounter.set(sessionId, { value: 0 });\\r\\n       
    this.clientIKManager.AddPlayerIK(sessionId);\\r\\n        const isLocal = this.room.SessionId
    === player.sessionId;\\r\\n        $extension(\\\"ZEPETO.Character.Controller.ZepetoPlayersExtension\\\").CreatePlayerWithUserId(ZEPETO_Character_Controller_1.ZepetoPlayers.instance,
    sessionId, player.zepetoUserId, spawnInfo, isLocal);\\r\\n    }\\r\\n    OnLeavePlayer(sessionId,
    player) {\\r\\n        console.log(`[OnRemove] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.get(sessionId).OnChange = null;\\r\\n        this.currentPlayers.get(sessionId).OnChange
    = null;\\r\\n        this.currentPlayers.delete(sessionId);\\r\\n        this.curPlayersPrevplayerState.delete(sessionId);\\r\\n       
    this.curPlayersJumpCounter.delete(sessionId);\\r\\n        this.clientIKManager.DeletePlayerIK(sessionId);\\r\\n       
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.RemovePlayer(sessionId);\\r\\n   
    }\\r\\n    OnUpdatePlayer(zepetoPlayer, prevPlayerState, player, jumpCounter,
    $temp) {\\r\\n        const position = this.ParseVector3(player.transform.position);\\r\\n       
    const rotation = this.ParseVector3(player.transform.rotation);\\r\\n        $temp
    = this.characterStateMap.get(player.state);\\r\\n        // // \uB3D9\uAE30\uD654
    \uBCF4\uC815\\r\\n        // // if(prevPlayerState.state === CharacterState.Idle
    && player.state === CharacterState.Idle)\\r\\n        // if(prevPlayerState.state
    === CharacterState.Idle && player.state === CharacterState.Idle)\\r\\n       
    // {\\r\\n        //     if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n        //         prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n       
    //         return;\\r\\n        //     zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n        //     zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n        // }\\r\\n        // \uB3D9\uAE30\uD654
    \uBCF4\uC815\\r\\n        // if(prevPlayerState.state === CharacterState.Idle
    && player.state === CharacterState.Idle)\\r\\n        if ((player.state === ZEPETO_Character_Controller_1.CharacterState.Idle
    ||\\r\\n            player.state === ZEPETO_Character_Controller_1.CharacterState.Stamp
    ||\\r\\n            player.state === ZEPETO_Character_Controller_1.CharacterState.Landing)
    &&\\r\\n            player.state === prevPlayerState.state) {\\r\\n           
    if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n                prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n               
    return;\\r\\n            zepetoPlayer.character.transform.position = prevPlayerState.position;\\r\\n           
    zepetoPlayer.character.transform.rotation = prevPlayerState.rotation;\\r\\n       
    }\\r\\n        // if((zepetoPlayer.character.CurrentState === CharacterState.Stamp
    || zepetoPlayer.character.CurrentState === CharacterState.Landing) && \\r\\n       
    //     (prevPlayerState.landingPosition && prevPlayerState.landingRotation))\\r\\n       
    // {\\r\\n        //     // if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n        //     //     prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n       
    //     //     return;\\r\\n        //     // zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n        //     // zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n        //     zepetoPlayer.character.transform.position
    = prevPlayerState.landingPosition;\\r\\n        //     zepetoPlayer.character.transform.rotation
    = prevPlayerState.landingRotation;\\r\\n        //     prevPlayerState.landingPosition
    = null;\\r\\n        //     prevPlayerState.landingRotation = null;\\r\\n       
    // } \\r\\n        var moveDir = UnityEngine.Vector3.op_Subtraction(position,
    zepetoPlayer.character.transform.position);\\r\\n        moveDir = new UnityEngine.Vector3(moveDir.x,
    0, moveDir.z);\\r\\n        if (moveDir.magnitude < 0.05) {\\r\\n           
    if (player.state === ZEPETO_Character_Controller_1.CharacterState.MoveTurn)\\r\\n               
    return;\\r\\n            zepetoPlayer.character.StopMoving();\\r\\n        }\\r\\n       
    else {\\r\\n            zepetoPlayer.character.MoveContinuously(moveDir);\\r\\n           
    zepetoPlayer.character.transform.rotation = UnityEngine.Quaternion.Euler(UnityEngine.Vector3.zero);\\r\\n       
    }\\r\\n        if (prevPlayerState) {\\r\\n            if (prevPlayerState.state
    === ZEPETO_Character_Controller_1.CharacterState.Jump || prevPlayerState.state
    === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n               
    player.state !== ZEPETO_Character_Controller_1.CharacterState.Jump && player.state
    !== ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n               
    prevPlayerState.landingPosition = position;\\r\\n                prevPlayerState.landingRotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n            }\\r\\n           
    prevPlayerState.state = player.state; //player.expectedState as CharacterState;\\r\\n           
    prevPlayerState.position = position;\\r\\n            prevPlayerState.rotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n            // if((player.state
    === CharacterState.Stamp || player.state === CharacterState.Landing) && \\r\\n           
    //     player.state !== prevPlayerState.state)\\r\\n            // {\\r\\n           
    //     // if ((prevPlayerState.position.Equals(zepetoPlayer.character.transform.position)
    &&\\r\\n            //     //     prevPlayerState.rotation.Equals(zepetoPlayer.character.transform.rotation)))\\r\\n           
    //     //     return;\\r\\n            //     // zepetoPlayer.character.transform.position
    = prevPlayerState.position;\\r\\n            //     // zepetoPlayer.character.transform.rotation
    = prevPlayerState.rotation;\\r\\n            //     prevPlayerState.landingPosition
    = position;\\r\\n            //     prevPlayerState.landingRotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n           
    // } \\r\\n        }\\r\\n    }\\r\\n    HandleJumpCounter(jumpCounter) {\\r\\n       
    jumpCounter.value += 1;\\r\\n    }\\r\\n    ;\\r\\n    *OnHandlePlayerJump(character,
    jumpCounter) {\\r\\n        jumpCounter.value += 1;\\r\\n        while (true)
    {\\r\\n            if (jumpCounter.value > 0 && character && !this.unableJumpStates.includes(character.CurrentState))
    {\\r\\n                character.Jump();\\r\\n                jumpCounter.value
    -= 1;\\r\\n                break;\\r\\n            }\\r\\n            yield null;\\r\\n       
    }\\r\\n    }\\r\\n    ;\\r\\n    JumpThisPlayer() {\\r\\n        this.curPlayersJumpCounter.forEach((jumpCounter,
    sessionId) => {\\r\\n            // \uC810\uD504\uD558\uAE30\\r\\n           
    if (jumpCounter.value > 0) {\\r\\n                const character = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId).character;\\r\\n               
    if (character && !this.unableJumpStates.includes(character.CurrentState)) {\\r\\n                   
    character.Jump();\\r\\n                    jumpCounter.value -= 1;\\r\\n               
    }\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    OnJumpPlayer(character,
    jumpCounter, curState, prevState) {\\r\\n        if (jumpCounter.value > 0) {\\r\\n           
    if (character && !this.unableJumpStates.includes(curState)) {\\r\\n               
    character.Jump();\\r\\n                jumpCounter.value -= 1;\\r\\n           
    }\\r\\n        }\\r\\n    }\\r\\n    FixPlayerLandingPointWithState(character,
    playerState, curState, prevState) {\\r\\n        if (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump
    || prevState === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n            (playerState.landingPosition
    !== null && playerState.landingRotation !== null)) {\\r\\n            character.transform.position
    = playerState.landingPosition;\\r\\n            character.transform.rotation
    = playerState.landingRotation;\\r\\n            playerState.landingPosition =
    null;\\r\\n            playerState.landingRotation = null;\\r\\n        }\\r\\n   
    }\\r\\n    FixPlayerLandingPoint(character, landingPoint, curState, prevState)
    {\\r\\n        if (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump
    || prevState === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n            const
    position = this.ParseVector3(landingPoint.transform.position);\\r\\n           
    const rotation = UnityEngine.Quaternion.Euler(this.ParseVector3(landingPoint.transform.rotation));\\r\\n           
    character.transform.position = position;\\r\\n            character.transform.rotation
    = rotation;\\r\\n        }\\r\\n    }\\r\\n    IsEqualVector3State(first, second)
    {\\r\\n        return (first.x === second.x &&\\r\\n            first.y === second.y
    &&\\r\\n            first.z === second.z);\\r\\n    }\\r\\n    CheckValidGoundLayer(character)
    {\\r\\n        let ref = $ref();\\r\\n        if (UnityEngine.Physics.Raycast(character.transform.position,
    UnityEngine.Vector3.down, ref, 1000)) {\\r\\n            let hitInfo = $unref(ref);\\r\\n       
    }\\r\\n        else {\\r\\n            character.Teleport(UnityEngine.Vector3.zero,
    UnityEngine.Quaternion.Euler(UnityEngine.Vector3.zero));\\r\\n        }\\r\\n   
    }\\r\\n    SendTransform(transform, state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    const pos = new ZEPETO_Multiplay_1.RoomData();\\r\\n        pos.Add(\\\"x\\\",
    transform.localPosition.x);\\r\\n        pos.Add(\\\"y\\\", transform.localPosition.y);\\r\\n       
    pos.Add(\\\"z\\\", transform.localPosition.z);\\r\\n        data.Add(\\\"position\\\",
    pos.GetObject());\\r\\n        const rot = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    rot.Add(\\\"x\\\", transform.localEulerAngles.x);\\r\\n        rot.Add(\\\"y\\\",
    transform.localEulerAngles.y);\\r\\n        rot.Add(\\\"z\\\", transform.localEulerAngles.z);\\r\\n       
    data.Add(\\\"rotation\\\", rot.GetObject());\\r\\n        data.Add(\\\"expectedState\\\",
    state);\\r\\n        this.room.Send(\\\"onChangedTransform\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendState(state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"state\\\", state);\\r\\n        if (state === ZEPETO_Character_Controller_1.CharacterState.Jump)
    {\\r\\n            data.Add(\\\"subState\\\", this.zepetoPlayer.character.MotionV2.CurrentJumpState);\\r\\n       
    }\\r\\n        this.room.Send(\\\"onChangedState\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendSelfieIK(lookAt, targetAt) {\\r\\n        if (lookAt && targetAt)
    {\\r\\n            const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n           
    data.Add(\\\"isSelfie\\\", true);\\r\\n            const lookAtData = new ZEPETO_Multiplay_1.RoomData();\\r\\n           
    lookAtData.Add(\\\"x\\\", lookAt.x);\\r\\n            lookAtData.Add(\\\"y\\\",
    lookAt.y);\\r\\n            lookAtData.Add(\\\"z\\\", lookAt.z);\\r\\n           
    data.Add(\\\"lookAt\\\", lookAtData.GetObject());\\r\\n            const targetAtData
    = new ZEPETO_Multiplay_1.RoomData();\\r\\n            targetAtData.Add(\\\"x\\\",
    targetAt.x);\\r\\n            targetAtData.Add(\\\"y\\\", targetAt.y);\\r\\n           
    targetAtData.Add(\\\"z\\\", targetAt.z);\\r\\n            data.Add(\\\"targetAt\\\",
    targetAtData.GetObject());\\r\\n            this.room.Send(\\\"onSelfieIK\\\",
    data.GetObject());\\r\\n        }\\r\\n    }\\r\\n    SendSelfieExit() {\\r\\n       
    const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        data.Add(\\\"isSelfie\\\",
    true);\\r\\n        this.room.Send(\\\"onSelfieIKExit\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendPlayerLanding(transform, curState, prevState) {\\r\\n        if
    (prevState === ZEPETO_Character_Controller_1.CharacterState.Jump || prevState
    === ZEPETO_Character_Controller_1.CharacterState.Falling &&\\r\\n           
    curState !== ZEPETO_Character_Controller_1.CharacterState.Jump && curState !==
    ZEPETO_Character_Controller_1.CharacterState.Falling) {\\r\\n            const
    data = new ZEPETO_Multiplay_1.RoomData();\\r\\n            const pos = new ZEPETO_Multiplay_1.RoomData();\\r\\n           
    pos.Add(\\\"x\\\", transform.localPosition.x);\\r\\n            pos.Add(\\\"y\\\",
    transform.localPosition.y);\\r\\n            pos.Add(\\\"z\\\", transform.localPosition.z);\\r\\n           
    data.Add(\\\"position\\\", pos.GetObject());\\r\\n            const rot = new
    ZEPETO_Multiplay_1.RoomData();\\r\\n            rot.Add(\\\"x\\\", transform.localEulerAngles.x);\\r\\n           
    rot.Add(\\\"y\\\", transform.localEulerAngles.y);\\r\\n            rot.Add(\\\"z\\\",
    transform.localEulerAngles.z);\\r\\n            data.Add(\\\"rotation\\\", rot.GetObject());\\r\\n           
    this.room.Send(\\\"onPlayerLanding\\\", data.GetObject());\\r\\n            console.log(`[SendLandingPOint]
    ${transform.localPosition.ToString()}`);\\r\\n        }\\r\\n    }\\r\\n    ParseVector3(vector3)
    {\\r\\n        return new UnityEngine.Vector3(vector3.x, vector3.y, vector3.z);\\r\\n   
    }\\r\\n    *FixRotation() {\\r\\n        while (true) {\\r\\n            this.currentPlayers.forEach((value,
    sessionId) => {\\r\\n                if (this.room.SessionId !== sessionId &&
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(sessionId)) {\\r\\n                   
    const player = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n                   
    player.character.transform.rotation = UnityEngine.Quaternion.Euler(UnityEngine.Vector3.zero);\\r\\n                   
    console.log(`[FixRotation] ${sessionId}: ${player.character.transform.rotation.ToString()}`);\\r\\n               
    }\\r\\n            });\\r\\n            yield new UnityEngine.WaitUntil(() =>
    true);\\r\\n        }\\r\\n    }\\r\\n    LateUpdate() {\\r\\n        this.currentPlayers.forEach((value,
    sessionId) => {\\r\\n            if (this.room.SessionId !== sessionId && ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(sessionId))
    {\\r\\n                const player = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n               
    player.character.transform.rotation = UnityEngine.Quaternion.Euler(UnityEngine.Vector3.zero);\\r\\n               
    console.log(`[FixRotation] ${sessionId}: ${player.character.transform.rotation.ToString()}`);\\r\\n           
    }\\r\\n        });\\r\\n    }\\r\\n    /*-------------------public---------------------*/\\r\\n   
    static GetInstance() {\\r\\n        if (!ClientStarterV2.Instance) {\\r\\n           
    var _obj = new UnityEngine.GameObject(\\\"ClientStarter\\\");\\r\\n           
    UnityEngine.GameObject.DontDestroyOnLoad(_obj);\\r\\n            ClientStarterV2.Instance
    = _obj.AddComponent($typeof(ClientStarterV2));\\r\\n        }\\r\\n        return
    ClientStarterV2.Instance;\\r\\n    }\\r\\n    SendPlayerJump(state) {\\r\\n       
    if (!this.unableJumpStates.includes(state)) {\\r\\n            this.room.Send(\\\"onPlayerJump\\\");\\r\\n           
    console.log(\\\"[SendPlayerJump] jump!\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.default
    = ClientStarterV2;\\r\\n//# sourceMappingURL=data:application/json;base64,\",\"assetPath\":\"Assets/Multiplay
    Script/ClientStarterV2.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"ZEPETO.World\",\"name\":\"multiplay\",\"type\":\"ZEPETO.World.ZepetoWorldMultiplay\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]},{\"assembly\":\"UnityEngine.UI\",\"name\":\"debugText\",\"type\":\"UnityEngine.UI.Text\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]}],\"name\":\"ClientStarterV2\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: 75fc818caa4c20af8583d93f5e930077
  onlyWriteTrigger: 0
