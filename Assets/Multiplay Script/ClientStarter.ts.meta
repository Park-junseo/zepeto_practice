fileFormatVersion: 2
guid: c7bb07c212b7de848a9081f4cb2a715f
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Character_Controller_1
    = require(\\\"ZEPETO.Character.Controller\\\");\\r\\nconst ZEPETO_Multiplay_1
    = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    UnityEngine = require(\\\"UnityEngine\\\");\\r\\nconst ZepetoUIAsset_1 = require(\\\"../Charactor
    Script/ZepetoUIAsset\\\");\\r\\nclass ClientStarter extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\\r\\n    constructor() {\\r\\n        super(...arguments);\\r\\n        this.prevRotation
    = UnityEngine.Vector3.zero;\\r\\n        this.prevPosition = UnityEngine.Vector3.zero;\\r\\n       
    this.currentPlayers = new Map();\\r\\n        //private curretnPlayersAction:Map<string,Action>
    = new Map<string,Action>();\\r\\n        this.curPlayersPrevTransform = new Map();\\r\\n       
    this.myPlayerState = null;\\r\\n        this.characterStateMap = new Map([\\r\\n           
    [0, \\\"Invalid\\\"],\\r\\n            [1, \\\"Idle\\\"],\\r\\n            [2,
    \\\"Walk\\\"],\\r\\n            [3, \\\"Run\\\"],\\r\\n            [4, \\\"JumpIdle\\\"],\\r\\n           
    [5, \\\"JumpMove\\\"],\\r\\n            [20, \\\"Teleport\\\"],\\r\\n           
    [30, \\\"Gesture\\\"],\\r\\n            [102, \\\"Move\\\"],\\r\\n           
    [103, \\\"MoveTurn\\\"],\\r\\n            [104, \\\"Jump\\\"],\\r\\n           
    [106, \\\"Stamp\\\"],\\r\\n            [108, \\\"Falling\\\"],\\r\\n           
    [109, \\\"Landing\\\"],\\r\\n        ]);\\r\\n        this.fixMagnitudeDelta
    = 1.0;\\r\\n    }\\r\\n    Start() {\\r\\n        this.multiplay.add_RoomCreated((room)
    => {\\r\\n            this.room = room;\\r\\n        });\\r\\n        this.multiplay.add_RoomJoined((room)
    => {\\r\\n            room.add_OnStateChange(this.OnStateChange.bind(this));\\r\\n       
    });\\r\\n        this.StartCoroutine(this.SendMessageLoop(1.0));\\r\\n    }\\r\\n   
    // private *SendMessageLoop(tick:number) {\\r\\n    //     const ticks = new
    UnityEngine.WaitForSeconds(tick);\\r\\n    //     while(true) {\\r\\n    //        
    //yield ticks;\\r\\n    //         yield new UnityEngine.WaitForSeconds(tick);\\r\\n   
    //         if(this.room != null && this.room.IsConnected) {\\r\\n    //            
    const hasPlayer = ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n   
    //             if(hasPlayer) {\\r\\n    //                 const myPlayer = ZepetoPlayers.instance.GetPlayer(this.room.SessionId);\\r\\n   
    //                 if(this.IsTimingUpdatePlayer(myPlayer)) {\\r\\n    //                    
    this.SendTransform(myPlayer.character.transform);\\r\\n    //                
    }\\r\\n    //                 this.debugText.text = this.characterStateMap.get(myPlayer.character.CurrentState);\\r\\n   
    //                 this.prevRotation = myPlayer.character.transform.localEulerAngles;\\r\\n   
    //             }\\r\\n    //             //console.log(`[sendMessageLoop] my
    position x: ${this.currentPlayers.get(this.room.SessionId)?.transform.position.x}`);\\r\\n   
    //         }\\r\\n    //     }\\r\\n    // }\\r\\n    *SendMessageLoop(tick)
    {\\r\\n        const ticks = new UnityEngine.WaitForSeconds(tick);\\r\\n       
    while (true) {\\r\\n            yield null;\\r\\n            if (this.room !=
    null && this.room.IsConnected && this.myPlayerState !== null) {\\r\\n               
    const hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n               
    if (hasPlayer) {\\r\\n                    this.myZepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId);\\r\\n                   
    this.uiAsset = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetComponentInChildren($typeof(ZepetoUIAsset_1.default));\\r\\n                   
    if (this.uiAsset) {\\r\\n                        this.uiAsset.jumpButton.onClick.AddListener(()
    => {\\r\\n                            this.room.Send(\\\"onJump\\\");\\r\\n                           
    console.log(\\\"jump\\\");\\r\\n                        });\\r\\n                   
    }\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n       
    }\\r\\n        while (true) {\\r\\n            yield ticks;\\r\\n           
    if (this.room != null && this.room.IsConnected && this.myZepetoPlayer.isLoadedCharacter)
    {\\r\\n                if (this.IsTimingUpdatePlayer(this.myZepetoPlayer)) {\\r\\n                   
    this.SendTransform(this.myZepetoPlayer.character.transform);\\r\\n               
    }\\r\\n                this.debugText.text = this.characterStateMap.get(this.myZepetoPlayer.character.CurrentState);\\r\\n           
    }\\r\\n        }\\r\\n    }\\r\\n    IsTimingUpdatePlayer(myPlayer) {\\r\\n       
    //return myPlayer.character.CurrentState != CharacterState.Idle\\r\\n       
    // !this.prevRotation.Equals(myPlayer.character.transform.localEulerAngles)\\r\\n       
    // || !this.IsEqualVector3State(myPlayer.character.transform.localEulerAngles,this.myPlayerState.transform.rotation);\\r\\n       
    return !this.IsEqualVector3State(myPlayer.character.transform.position, this.myPlayerState.transform.position)
    ||\\r\\n            !this.IsEqualVector3State(myPlayer.character.transform.localEulerAngles,
    this.myPlayerState.transform.rotation);\\r\\n    }\\r\\n    IsEqualVector3State(first,
    second) {\\r\\n        return (first.x === second.x &&\\r\\n            first.y
    === second.y &&\\r\\n            first.z === second.z);\\r\\n    }\\r\\n    OnJoinPlayer(sessionId,
    player) {\\r\\n        console.log(`[OnJoinPlayer] player - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.set(sessionId, player);\\r\\n        const spawnInfo = this.SetInitialSpawnInfo(player);\\r\\n       
    //\uAC01 \uC778\uC2A4\uD134\uC2A4\uC758 \uC704\uCE58\uC815\uBCF4 \uC800\uC7A5\\r\\n       
    this.curPlayersPrevTransform.set(sessionId, {\\r\\n            position: spawnInfo.position,\\r\\n           
    rotation: spawnInfo.rotation\\r\\n        });\\r\\n        const isLocal = this.room.SessionId
    === player.sessionId;\\r\\n        $extension(\\\"ZEPETO.Character.Controller.ZepetoPlayersExtension\\\").CreatePlayerWithUserId(ZEPETO_Character_Controller_1.ZepetoPlayers.instance,
    sessionId, player.zepetoUserId, spawnInfo, isLocal);\\r\\n    }\\r\\n    SetInitialSpawnInfo(player,
    initialPosition, initialRotation) {\\r\\n        const spawnInfo = new ZEPETO_Character_Controller_1.SpawnInfo();\\r\\n       
    let position;\\r\\n        let rotation;\\r\\n        if (player.transform ===
    null) {\\r\\n            position = initialPosition || UnityEngine.Vector3.zero;\\r\\n           
    rotation = initialRotation || UnityEngine.Vector3.zero;\\r\\n        }\\r\\n       
    else {\\r\\n            position = this.ParseVector3(player.transform.position);\\r\\n           
    rotation = this.ParseVector3(player.transform.rotation);\\r\\n        }\\r\\n       
    spawnInfo.position = position;\\r\\n        spawnInfo.rotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n       
    return spawnInfo;\\r\\n    }\\r\\n    OnLeavePlayer(sessionId, player) {\\r\\n       
    console.log(`[OnLeavePlayer] player - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.delete(sessionId);\\r\\n        //this.curretnPlayersAction.delete(sessionId);\\r\\n       
    this.curPlayersPrevTransform.delete(sessionId);\\r\\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.RemovePlayer(sessionId);\\r\\n   
    }\\r\\n    OnStateChange(state, isFirst) {\\r\\n        if (isFirst) {\\r\\n           
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\\r\\n                const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\\r\\n               
    myPlayer.character.OnChangedState.AddListener((cur, prev) => {\\r\\n                   
    this.SendState(cur);\\r\\n                });\\r\\n            });\\r\\n           
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedPlayer.AddListener((sessionId)
    => {\\r\\n                const isLocal = this.room.SessionId === sessionId;\\r\\n               
    if (!isLocal) {\\r\\n                    const player = this.currentPlayers.get(sessionId);\\r\\n                   
    // Player \uC704\uCE58\uC815\uBCF4 \uB9AC\uC2A4\uB108 \uCD94\uAC00\\r\\n                   
    player.add_OnChange((ChangeValues) => this.OnUpdatePlayer(sessionId, player));\\r\\n                   
    // Player \uC561\uC158 \uB9AC\uC2A4\uB108 \uCD94\uAC00\\r\\n                   
    const action = this.room.State.actions.get_Item(sessionId);\\r\\n                   
    action.add_OnChange((ChangeValues) => this.JumpPlayer(sessionId, action));\\r\\n                   
    //player.add_OnChange((ChangeValues) => this.OnUpdatePlayer(sessionId, player));\\r\\n               
    }\\r\\n                else {\\r\\n                    this.myPlayerState = this.currentPlayers.get(sessionId);\\r\\n               
    }\\r\\n            });\\r\\n        }\\r\\n        let join = new Map();\\r\\n       
    let leave = new Map(this.currentPlayers);\\r\\n        state.players.ForEach((sessionId,
    player) => {\\r\\n            if (!this.currentPlayers.has(sessionId))\\r\\n               
    join.set(sessionId, player);\\r\\n            // else this.currentPlayers[sessionId]
    = player;\\r\\n            leave.delete(sessionId);\\r\\n        });\\r\\n       
    join.forEach((player, sessionId) => this.OnJoinPlayer(sessionId, player));\\r\\n       
    leave.forEach((player, sessionId) => this.OnLeavePlayer(sessionId, player));\\r\\n   
    }\\r\\n    OnUpdatePlayer(sessionId, player) {\\r\\n        const position =
    this.ParseVector3(player.transform.position);\\r\\n        const rotation = this.ParseVector3(player.transform.rotation);\\r\\n       
    const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n       
    const prevTransfromVector3 = this.curPlayersPrevTransform.get(sessionId);\\r\\n       
    // if(!zepetoPlayer.character.transform.position.Equals(this.prevPosition))\\r\\n       
    //     zepetoPlayer.character.transform.position = this.prevPosition;\\r\\n       
    // if (zepetoPlayer.character.CurrentState === CharacterState.Idle)\\r\\n       
    //     zepetoPlayer.character.transform.position = this.prevPosition;\\r\\n       
    // if (player.state === CharacterState.Idle) {\\r\\n        //     zepetoPlayer.character.transform.rotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n        //     //if(this.getMagnitude(zepetoPlayer.character.transform.localPosition,
    this.prevPosition) > this.fixMagnitudeDelta)\\r\\n        //     zepetoPlayer.character.transform.position
    = this.prevPosition;\\r\\n        // }\\r\\n        // if (player.state === CharacterState.Idle
    && prevTransfromVector3) {\\r\\n        //     zepetoPlayer.character.transform.localPosition
    = prevTransfromVector3.position;\\r\\n        //     zepetoPlayer.character.transform.rotation
    = prevTransfromVector3.rotation;\\r\\n        // }\\r\\n        zepetoPlayer.character.MoveToPosition(position);\\r\\n       
    //console.log(`${sessionId}'s position : ${position.ToString()}`);\\r\\n       
    // if(player.state === CharacterState.JumpIdle || player.state === CharacterState.JumpMove
    || player.state === CharacterState.Jump)\\r\\n        // {\\r\\n        //    
    zepetoPlayer.character.Jump();\\r\\n        // }\\r\\n        //\uC774\uC804
    \uC704\uCE58 \uC815\uBCF4 \uC5C5\uB370\uC774\uD2B8\\r\\n        if (prevTransfromVector3)
    {\\r\\n            prevTransfromVector3.position = position;\\r\\n           
    prevTransfromVector3.rotation = UnityEngine.Quaternion.Euler(rotation);\\r\\n       
    }\\r\\n    }\\r\\n    getMagnitude(first, second) {\\r\\n        const deltaX
    = first.x - second.x;\\r\\n        const deltaY = first.y - second.y;\\r\\n       
    const deltaZ = first.z - second.z;\\r\\n        return deltaX * deltaX + deltaY
    * deltaY + deltaZ * deltaZ;\\r\\n    }\\r\\n    JumpPlayer(sessionId, action)
    {\\r\\n        const zepetoPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n       
    zepetoPlayer.character.Jump();\\r\\n    }\\r\\n    SendTransform(transform) {\\r\\n       
    const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        const pos = new
    ZEPETO_Multiplay_1.RoomData();\\r\\n        pos.Add(\\\"x\\\", transform.localPosition.x);\\r\\n       
    pos.Add(\\\"y\\\", transform.localPosition.y);\\r\\n        pos.Add(\\\"z\\\",
    transform.localPosition.z);\\r\\n        data.Add(\\\"position\\\", pos.GetObject());\\r\\n       
    const rot = new ZEPETO_Multiplay_1.RoomData();\\r\\n        rot.Add(\\\"x\\\",
    transform.localEulerAngles.x);\\r\\n        rot.Add(\\\"y\\\", transform.localEulerAngles.y);\\r\\n       
    rot.Add(\\\"z\\\", transform.localEulerAngles.z);\\r\\n        data.Add(\\\"rotation\\\",
    rot.GetObject());\\r\\n        //console.log(`[SendTransform] ${transform.rotation.ToString()}`);\\r\\n       
    this.room.Send(\\\"onChangedTransform\\\", data.GetObject());\\r\\n    }\\r\\n   
    SendState(state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"state\\\", state);\\r\\n        this.room.Send(\\\"onChangeState\\\",
    data.GetObject());\\r\\n    }\\r\\n    SendJump() {\\r\\n        this.room.Send(\\\"onJump\\\");\\r\\n   
    }\\r\\n    ParseVector3(vector3) {\\r\\n        return new UnityEngine.Vector3(vector3.x,
    vector3.y, vector3.z);\\r\\n    }\\r\\n}\\r\\nexports.default = ClientStarter;\\r\\n//#
    sourceMappingURL=data:application/json;base64,\",\"assetPath\":\"Assets/Multiplay
    Script/ClientStarter.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"ZEPETO.World\",\"name\":\"multiplay\",\"type\":\"ZEPETO.World.ZepetoWorldMultiplay\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]},{\"assembly\":\"UnityEngine.UI\",\"name\":\"debugText\",\"type\":\"UnityEngine.UI.Text\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]}],\"name\":\"ClientStarter\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: d11fb9867bcf02a6398faae752e84443
  onlyWriteTrigger: 0
